// index.js
require('dotenv').config();
const express = require('express');
const TelegramBot = require('node-telegram-bot-api');

const app = express();
const port = process.env.PORT || 3000;

// –£–±–∏—Ä–∞–µ–º webhook: true ‚Äî –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–µ–∑ –Ω–µ–≥–æ
const bot = new TelegramBot(process.env.TELEGRAM_BOT_TOKEN);

// –ù—É–∂–Ω–æ –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON –≤ webhook
app.use(express.json());

// Webhook endpoint: /bot<TOKEN>
const webhookPath = `/bot${process.env.TELEGRAM_BOT_TOKEN}`;
app.post(webhookPath, (req, res) => {
  // –ü–µ—Ä–µ–¥–∞—ë–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ Telegram –±–æ—Ç—É
  bot.processUpdate(req.body);
  res.sendStatus(200); // Telegram –∂–¥—ë—Ç 200 OK
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –±–æ—Ç–∞ –≤ —á–∞—Ç
bot.on('my_chat_member', async (msg) => {
  const chat = msg.chat;
  const newStatus = msg.new_chat_member?.status;

  if (newStatus === 'member' || newStatus === 'administrator') {
    try {
      const chatInfo = await bot.getChat(chat.id);
      console.log('‚ÑπÔ∏è –ü–æ–ª—É—á–µ–Ω —á–∞—Ç:', chatInfo.title || chatInfo.id);

      const { error } = await supabase
        .from('chats')
        .insert({
          telegram_chat_id: chatInfo.id,
          title: chatInfo.title || 'Untitled',
          type: chatInfo.type,
        });

      if (error) {
        console.error('‚ùå Supabase insert error:', error);
      } else {
        console.log('‚úÖ –ß–∞—Ç —Å–æ—Ö—Ä–∞–Ω—ë–Ω –≤ –±–∞–∑—É');
      }
    } catch (err) {
      console.error('üí• –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —á–∞—Ç–∞:', err);
    }
  }
});

// Health-check
app.get('/', (req, res) => {
  res.send('Intro Matcher Bot is running on Render ‚úÖ');
});

// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Webhook –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ —Å–µ—Ä–≤–µ—Ä–∞
const webhookUrl = process.env.RENDER_EXTERNAL_URL || `http://localhost:${port}`;
if (webhookUrl && process.env.TELEGRAM_BOT_TOKEN) {
  bot.setWebHook(`${webhookUrl}${webhookPath}`)
    .then(() => console.log(`üì° Webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–∞: ${webhookUrl}${webhookPath}`))
    .catch(err => console.error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Webhook:', err));
}

app.listen(port, () => {
  console.log(`üöÄ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${port}`);
});