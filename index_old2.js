// index.js
require('dotenv').config();
const express = require('express');
const TelegramBot = require('node-telegram-bot-api');

const app = express();
const port = process.env.PORT || 3000;

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram-–±–æ—Ç–∞ –≤ —Ä–µ–∂–∏–º–µ webhook
const bot = new TelegramBot(process.env.TELEGRAM_BOT_TOKEN, {
  webHook: true,
});

// Middleware –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤—Ö–æ–¥—è—â–∏—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
app.use(bot.webhookCallback(`/bot${process.env.TELEGRAM_BOT_TOKEN}`));

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –±–æ—Ç–∞ –≤ —á–∞—Ç
bot.on('my_chat_member', async (msg) => {
  console.log('üì• –ë–æ—Ç –¥–æ–±–∞–≤–ª–µ–Ω –≤ —á–∞—Ç:', msg);
  
  const chat = msg.chat;
  const newStatus = msg.new_chat_member?.status;
  
  if (newStatus === 'member' || newStatus === 'administrator') {
    try {
      const chatInfo = await bot.getChat(chat.id);
      console.log('‚ÑπÔ∏è –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ —á–∞—Ç–∞:', {
        id: chatInfo.id,
        title: chatInfo.title,
        type: chatInfo.type,
      });
      console.log('‚úÖ –ß–∞—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≤ —Å–∏—Å—Ç–µ–º–µ');
    } catch (err) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö —á–∞—Ç–∞:', err);
    }
  }
});

// Health-check
app.get('/', (req, res) => {
  res.send('Intro Matcher Bot is running!');
});

// –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
app.listen(port, async () => {
  console.log(`üöÄ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${port}`);
  
  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º webhook –¢–û–õ–¨–ö–û –ø–æ—Å–ª–µ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞
  const webhookUrl = process.env.RENDER_EXTERNAL_URL || `http://localhost:${port}`;
  try {
    await bot.setWebHook(`${webhookUrl}/bot${process.env.TELEGRAM_BOT_TOKEN}`);
    console.log(`‚úÖ Webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–∞: ${webhookUrl}/bot${process.env.TELEGRAM_BOT_TOKEN}`);
  } catch (err) {
    console.error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å webhook:', err);
  }
});